name: "Vue Distribution"
description: "Build a vue distrution and upload an artifact for it"

inputs:
  version:
    description: "Version tag for the creation of the artifact."
    required: true
  NPM_TOKEN:
    description: "Secret for grabbing dependencies from private repo's"
    required: true
  NODE_CACHE:
    required: false
    default: ''
    description: "Set NODE_CACHE to 'npm' to enabled cached dependencies"
  MODULES_CACHE:
    required: false
    default: 'false'
    description: "If set to 'true', cache node_modules"

outputs:
  dist:
    value: ${{steps.artifact-name.outputs.NAME}}
    description: Distribution name, for picking up the artefact in the next step

runs:
  using: "composite"
  # outputs:
  #   dist: ${{ env.DIST_NAME }}
  steps:
  - shell: bash
    run: echo "NAME=dist.${{ inputs.version }}" >> $GITHUB_OUTPUT
    id: artifact-name
  - uses: actions/checkout@v4
  - name: Use Node.js
    uses: actions/setup-node@v4
    with:
      node-version-file: '.nvmrc'
      cache:  ${{ inputs.NODE_CACHE }}
  - name: Cache node modules
    if: ${{ inputs.MODULES_CACHE == 'true' }}
    id: cache-nodemodules
    uses: actions/cache@v3
    env:
      cache-name: cache-node-modules
    with:
      # caching node_modules
      path: node_modules
      key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      restore-keys: |
        ${{ runner.os }}-build-${{ env.cache-name }}-
        ${{ runner.os }}-build-
        ${{ runner.os }}-
  # Skip post-install scripts here, as a malicious
  # script could steal NPM_TOKEN.
  - run: npm ci --ignore-scripts
    if: steps.cache-nodemodules.outputs.cache-hit != 'true'
    shell: bash
    env:
      NPM_TOKEN: ${{ inputs.NPM_TOKEN }}
  # `npm rebuild` will run all those post-install scripts for us.
  - run: npm rebuild && npm run prepare --if-present
    if: steps.cache-nodemodules.outputs.cache-hit != 'true'
    shell: bash
  - run: npm run build
    shell: bash
    env:
      CI: "true"
  - name: Archive production artifacts
    id: dist
    uses: actions/upload-artifact@v3
    with:
      name: ${{steps.artifact-name.outputs.NAME}}
      retention-days: 3
      path: |
        dist
        !dist/**/*.md
