name: "Node CI"
description: "Basic NodeJS CI"
inputs:
  NPM_REGISTRY_TOKEN:
    required: true
    description: "Your personal access token - PAT"
  NODE_VERSION:
    required: false
    default: "0"
    description: "The node version you would like to test"
  NODE_CACHE:
    required: false
    default: ''
    description: "Set NODE_CACHE to 'npm' to enabled cached dependencies"
  MODULES_CACHE:
    required: false
    default: 'false'
    description: "If set to 'true', cache node_modules"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Use Node.js - ${{ inputs.NODE_VERSION }}
      if: ${{ inputs.NODE_VERSION != '0' }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.NODE_VERSION }}
      env:
        NPM_TOKEN: ${{ inputs.NPM_REGISTRY_TOKEN }}
    - name: Use Node.js Own version
      if: ${{ inputs.NODE_VERSION == '0' }}
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
        cache:  ${{ inputs.NODE_CACHE }}
      env:
        NPM_TOKEN: ${{ inputs.NPM_REGISTRY_TOKEN }}
    - name: Cache node modules
      if: ${{ inputs.MODULES_CACHE == 'true' }}
      id: cache-nodemodules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # caching node_modules
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: npm install
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: |
        npm ci
      shell: bash
      env:
        CI: "true"
        NPM_TOKEN: ${{ inputs.NPM_REGISTRY_TOKEN }}
    - name: npm audit
      run: |
        npm run vulnerabilities
      shell: bash
      env:
        CI: "true"
        NPM_TOKEN: ${{ inputs.NPM_REGISTRY_TOKEN }}
    - name: npm lint
      run: |
        npm run lint:report
      shell: bash
      env:
        CI: "true"
        NPM_TOKEN: ${{ inputs.NPM_REGISTRY_TOKEN }}
    - name: npm copy paste detection
      run: |
        npm run cpd
      shell: bash
      env:
        CI: "true"
        NPM_TOKEN: ${{ inputs.NPM_REGISTRY_TOKEN }}
    - name: npm test
      run: |
        npm test
      shell: bash
      env:
        CI: "true"
        NPM_TOKEN: ${{ inputs.NPM_REGISTRY_TOKEN }}
